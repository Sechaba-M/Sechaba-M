{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "676473f2",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-11T11:52:05.061382Z",
     "iopub.status.busy": "2024-06-11T11:52:05.061002Z",
     "iopub.status.idle": "2024-06-11T11:52:05.895871Z",
     "shell.execute_reply": "2024-06-11T11:52:05.894530Z"
    },
    "papermill": {
     "duration": 0.841156,
     "end_time": "2024-06-11T11:52:05.898118",
     "exception": false,
     "start_time": "2024-06-11T11:52:05.056962",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/prescription-drug-use-in-hrrs-and-hsas-2010/DAP_prescription_drug_use_hsa_2010.csv\n",
      "/kaggle/input/prescription-drug-use-in-hrrs-and-hsas-2010/DAP_prescription_drug_use_hrr_2010.csv\n",
      "/kaggle/input/prescription-drug-use-in-hrrs-and-hsas-2010/DAP_prescription_drug_use_state_2010.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f7b2d1e2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T11:52:05.904029Z",
     "iopub.status.busy": "2024-06-11T11:52:05.903653Z",
     "iopub.status.idle": "2024-06-11T11:52:07.363509Z",
     "shell.execute_reply": "2024-06-11T11:52:07.362686Z"
    },
    "papermill": {
     "duration": 1.465486,
     "end_time": "2024-06-11T11:52:07.366035",
     "exception": false,
     "start_time": "2024-06-11T11:52:05.900549",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import scipy as sp\n",
    "import numpy as np\n",
    "from sklearn import  neighbors, datasets, preprocessing\n",
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e811f516",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T11:52:07.372071Z",
     "iopub.status.busy": "2024-06-11T11:52:07.371755Z",
     "iopub.status.idle": "2024-06-11T11:52:07.415370Z",
     "shell.execute_reply": "2024-06-11T11:52:07.414399Z"
    },
    "papermill": {
     "duration": 0.048857,
     "end_time": "2024-06-11T11:52:07.417309",
     "exception": false,
     "start_time": "2024-06-11T11:52:07.368452",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "index                                   False\n",
       "HRR ID                                  False\n",
       "HRR Name                                False\n",
       "State                                   False\n",
       "Medicare Part D beneficiaries (2010)    False\n",
       "                                        ...  \n",
       "Unnamed: 251                             True\n",
       "Unnamed: 252                             True\n",
       "Unnamed: 253                             True\n",
       "Unnamed: 254                             True\n",
       "Unnamed: 255                             True\n",
       "Length: 257, dtype: bool"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset_1 = pd.read_csv('/kaggle/input/prescription-drug-use-in-hrrs-and-hsas-2010/DAP_prescription_drug_use_hrr_2010.csv')\n",
    "dataset_1.head()\n",
    "dataset_1.isnull().all() == True\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93ea53bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T11:12:56.444471Z",
     "iopub.status.busy": "2024-06-11T11:12:56.444076Z",
     "iopub.status.idle": "2024-06-11T11:12:56.478505Z",
     "shell.execute_reply": "2024-06-11T11:12:56.477027Z",
     "shell.execute_reply.started": "2024-06-11T11:12:56.444440Z"
    },
    "papermill": {
     "duration": 0.002114,
     "end_time": "2024-06-11T11:52:07.421771",
     "exception": false,
     "start_time": "2024-06-11T11:52:07.419657",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 2796237,
     "sourceId": 4826569,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 5.573215,
   "end_time": "2024-06-11T11:52:07.842552",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-11T11:52:02.269337",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
